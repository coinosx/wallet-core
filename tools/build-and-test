#!/usr/bin/env bash
#
# Perform full build and runs the tests.
# Prerequisite: workspace with dependencies installed, see bootstrap.sh

# Fail if any commands fails
set -e

SDK_PATH=$(xcrun --show-sdk-path)
EXTRA_FLAGS="-isysroot $SDK_PATH -isystem $SDK_PATH/usr/include/c++/v1 -isystem $SDK_PATH/usr/include"

CMAKE_MACOS_FLAGS=(
  -DCMAKE_OSX_ARCHITECTURES=arm64
  -DCMAKE_SYSROOT=$SDK_PATH
  -Dprotobuf_HAVE_BUILTIN_ATOMICS=ON
  "-DCMAKE_CXX_FLAGS=$EXTRA_FLAGS"
)

echo "#### Generating files... ####"
tools/generate-files native

echo "#### Building... ####"
cmake -H. -Bbuild -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ "${CMAKE_MACOS_FLAGS[@]}"
make -Cbuild -j12 tests TrezorCryptoTests

if [ -x "$(command -v clang-tidy)" ]; then
    echo "#### Linting... ####"
    tools/lint
fi

echo "#### Running trezor-crypto tests... ####"
export CK_TIMEOUT_MULTIPLIER=4
build/trezor-crypto/crypto/tests/TrezorCryptoTests

echo "#### Running unit tests... ####"
FILTER="*"
if [ -n "$1" ]; then
    FILTER="*$1*"
fi
build/tests/tests --gtest_filter="$FILTER"
